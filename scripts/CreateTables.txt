create table users(
	id SERIAL,
	full_name VARCHAR(150) NOT NULL,
	role INTEGER DEFAULT 0 CHECK(
		role = 0 OR -- manager
		role = 1 -- specialist
	),

	username VARCHAR(50) UNIQUE NOT NULL,
	password VARCHAR(50) NOT NULL,

	CONSTRAINT users_key PRIMARY KEY (id)
);

create table customer(
	full_name VARCHAR(150) NOT NULL,

	passport_number VARCHAR(12),
	passport_gived VARCHAR(500) NOT NULL,
	passport_date date NOT NULL,

	snils VARCHAR(50),
	phone VARCHAR(12),
	email VARCHAR(50),

	CONSTRAINT customer_key PRIMARY KEY (passport_number)
);

create table orders
(
	id SERIAL,
	work_class VARCHAR(150),
	work_type VARCHAR(150),
	order_date DATE DEFAULT current_date,
	deadline DATE DEFAULT (current_date + 7) CHECK(
		deadline > order_date
	),
	place VARCHAR(500) NOT NULL,
	status INTEGER DEFAULT 0 CHECK(
		status = 0 OR 
		status = 1 OR 
		status = 2 OR 
		status = 3
	),
	ingeneer INTEGER REFERENCES users ON DELETE SET NULL,
	fielder INTEGER REFERENCES users ON DELETE SET NULL,
	customer VARCHAR(150) REFERENCES customer ON DELETE SET NULL,

	CONSTRAINT orders_key PRIMARY KEY (id)
);

create table oblast(

	id SERIAL,
	full_name VARCHAR(150) NOT NULL,


	CONSTRAINT oblast_key PRIMARY KEY (id)
);

create table raion(

	id SERIAL,
	full_name VARCHAR(150) NOT NULL,
	type INTEGER CHECK(type=0 or type=1),
	oblast INTEGER REFERENCES oblast ON DELETE CASCADE,

	CONSTRAINT region_key PRIMARY KEY (id)
);

create table poselenie(

	id SERIAL,
	full_name VARCHAR(150) NOT NULL,
	type INTEGER CHECK(type=0 or type=1),
	raion INTEGER REFERENCES raion ON DELETE CASCADE,

	CONSTRAINT poselenie_key PRIMARY KEY (id)
);